{"version":3,"sources":["image/CoronaIcon.png","image/title.png","components/NewsCarousel.js","components/PatientsTable.js","components/LoginContext.js","components/Login.js","components/Appbar.js","pages/mainPage.js","components/BulletinBoardMain.js","pages/bulletinBoard.js","components/BBSPostCreate.js","pages/createPostPage.js","components/NestedComment.js","components/NestedCommentsButton.js","components/Comment.js","components/BBSPost.js","pages/postPage.js","App.js","serviceWorker.js","index.js","image/bg1.jpeg"],"names":["module","exports","NewsCarousel","props","callApi","a","fetch","response","json","body","state","newsData","this","then","res","setState","style","width","height","top","className","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","centerMode","centerPadding","autoplay","rows","slidesPerRow","autoplaySpeed","map","news","i","href","target","src","title","borderRadius","subtitle","React","Component","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","fontSize","position","TableCell","StyledTableRow","root","TableRow","PatientsTable","thousandSeperator","num","toLocaleString","tableData","confirmed","totalSum","yesterdayCompare","subTotal","domesticOcurrence","overseasInflow","released","quarantine","gone","graphData","console","log","patientsTableInfo","patientsGraphInfo","reverse","classes","display","flexDirection","TableContainer","marginTop","marginBottom","Table","stickyHeader","table","aria-label","TableHead","align","TableBody","component","scope","rowSpan","justifyContent","Divider","orientation","flexItem","Paper","data","valueField","argumentField","minWidth","divider","margin","spacing","LoginContext","createContext","isLoggedin","userName","userImageSrc","userID","setLogin","setLogout","Login","id","name","provider","anchorEl","handleClick","event","currentTarget","handleClose","Consumer","isLoggedIn","alignItems","marginLeft","Button","overflow","aria-controls","aria-haspopup","onClick","variant","borderColor","Typography","Menu","keepMounted","open","Boolean","onClose","MenuItem","buttonText","onLogoutSuccess","clientId","onSuccess","onFailure","cookiePolicy","isSignedIn","Appbar","AppBar","Toolbar","IconButton","edge","menuButton","alignSelf","paddingRight","imgMask","window","location","pathname","activeClass","to","spy","smooth","duration","padding","marginRight","flexGrow","mainPage","handleFileOnChange","formData","FormData","append","bg1","post","header","isLoading","c","that","setTimeout","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","disabled","Math","ceil","max","BulletinBoardMain","posts","catch","err","min","length","AppbarHeight","left","border","maxHeight","slice","row","key","hover","Link","image","writer","whiteSpace","format","withTitle","date","TablePagination","rowsPerPageOptions","label","value","colSpan","labelRowsPerPage","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","bulletinBoard","document","getElementById","clientHeight","firstDiv","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Quill","register","ImageUploader","BBSPostCreate","handleFormSubmit","setPosts","goodPost","addPosts","content","getElementsByClassName","innerHTML","getElementsByTagName","thumbnail","headers","imageHandler","modules","toolbar","container","imageUploader","upload","file","Promise","resolve","reject","method","result","url","error","formats","bind","contentsDiv","Container","TextField","onChange","createPostPage","history","NestedComment","delComment","commentNum","minusCommentChild","parentNum","refreshParent","refreshNestedComment","maxWidth","flex","userImage","multiline","InputProps","input","multilineColor","ID","e","preventDefault","startIcon","NestedComments","isopen","justifySelf","childCount","Comment","refreshComment","setTextValue","textValue","getComments","postNum","new_body","addComment","context","undefined","nestedComments","getNestedComments","handleOpen","commentDlgOpen","targetComment","NestedCommentsButton","parentComment","Dialog","fullWidth","DialogTitle","DialogContent","DialogActions","contextType","postPage","getPosts","delPost","comment","nestedComment","temp","gutterBottom","dangerouslySetInnerHTML","__html","contents","params","match","App","profileObj","imageUrl","googleId","Provider","path","exact","MainPage","withRouter","hostname","createMuiTheme","typography","fontFamily","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccee3d6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CoronaIcon.3646e100.png\";","module.exports = __webpack_public_path__ + \"static/media/title.f33975f7.png\";","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { post } from \"axios\";\r\nimport \"../css/carousel.css\";\r\n\r\nclass NewsCarousel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newsData: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.callApi().then((res) => {\r\n      this.setState({\r\n        newsData: res,\r\n      });\r\n    });\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch(\"/api/news\");\r\n    const body = await response.json();\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    var settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 1000,\r\n      slidesToShow: 2,\r\n      slidesToScroll: 2,\r\n      arrows: true,\r\n      centerMode: false,\r\n      centerPadding: 0,\r\n      autoplay: true,\r\n      rows: 2,\r\n      slidesPerRow: 1,\r\n      autoplaySpeed: 8000,\r\n      //initialSlide: 1,\r\n      //centerPadding: \"px\",\r\n      //slidesPerRow: 3,\r\n    };\r\n\r\n    const newsComponent = (data) => {\r\n      return data.map((news, i) => {\r\n        return (\r\n          <div className=\"div-slider\">\r\n            <a href={news.a} target={\"_blank\"}>\r\n              <img src={news.src} />\r\n              <div>\r\n                <h3>\r\n                  <text> {news.title}</text>\r\n                </h3>\r\n              </div>\r\n              <text style={{ borderRadius: 0 }}>{news.subtitle}</text>\r\n            </a>\r\n          </div>\r\n        );\r\n      });\r\n    };\r\n\r\n    return (\r\n      <Slider\r\n        style={{\r\n          width: \"75%\",\r\n          height: \"50%\",\r\n          top: '10.5vh'\r\n        }}\r\n        className=\"carousel-slider\"\r\n        {...settings}\r\n      >\r\n        {newsComponent(this.state.newsData)}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsCarousel;\r\n","import React from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    Chart,\r\n    LineSeries,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(1),\r\n        color: 'rgba(0,0,0,0)',\r\n    }\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"rgba(0,0,0,1)\",\r\n        color: theme.palette.common.white,\r\n        fontSize: 20,\r\n        position: \"sticky\",\r\n    },\r\n    body: {\r\n        fontSize: 18,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        \"&:nth-of-type(odd)\": {\r\n            backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n        },\r\n        \"&:nth-of-type(even)\": {\r\n            backgroundColor: \"rgba(152, 152, 152, 0.6)\",\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nclass PatientsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tableData:\r\n            {\r\n                confirmed: {\r\n                    totalSum: 0,\r\n                    yesterdayCompare: {\r\n                        subTotal: 0,\r\n                        domesticOcurrence: 0,\r\n                        overseasInflow: 0\r\n                    }\r\n                },\r\n                released: {\r\n                    totalSum: 0,\r\n                    yesterdayCompare: 0\r\n                },\r\n                quarantine: {\r\n                    totalSum: 0,\r\n                    yesterdayCompare: 0,\r\n                },\r\n                gone: {\r\n                    totalSum: 0,\r\n                    yesterdayCompare: 0\r\n                }\r\n            },\r\n            graphData: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.callApi().then((res) => {\r\n            console.log(this.state.graphData)\r\n            this.setState({\r\n                tableData: res[0].patientsTableInfo,\r\n                graphData: res[1].patientsGraphInfo.reverse(),\r\n            });\r\n            console.log(this.state.graphData)\r\n        });\r\n    }\r\n\r\n    callApi = async () => {\r\n        const response = await fetch(\"/api/patientsInfo\");\r\n        const body = await response.json();\r\n        return body;\r\n    };\r\n\r\n\r\n    thousandSeperator = (num) => {\r\n        return num.toLocaleString();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <TableContainer\r\n                    style={{\r\n                        marginTop: \"10px\",\r\n                        marginBottom: \"20px\",\r\n                        borderRadius: \"15px\"\r\n                    }}\r\n                >\r\n                    <Table\r\n                        stickyHeader\r\n                        className={classes.table}\r\n                        aria-label=\"customized table\"\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell align=\"center\"></StyledTableCell>\r\n                                <StyledTableCell align=\"center\">확진환자</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">격리해제</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">격리중</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">사망</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <StyledTableRow>\r\n                                <StyledTableCell style={{ fontSize: '25px' }}\r\n                                    align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {'누적'}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell style={{ fontSize: '30px' }} align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.confirmed.totalSum + ' 명'}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.released.totalSum}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.quarantine.totalSum}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.gone.totalSum}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                            <StyledTableRow>\r\n                                <StyledTableCell style={{ fontSize: '25px' }} rowSpan={2}\r\n                                    align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {'전일 대비'}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell style={{ display: 'flex', justifyContent: 'space-around' }}\r\n                                    align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {'소계'}\r\n                                    <Divider orientation='vertical' flexItem />\r\n                                    {'국내발생'}\r\n                                    <Divider orientation='vertical' flexItem />\r\n                                    {'해외유입'}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell rowSpan={2} align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.released.yesterdayCompare}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell rowSpan={2} align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.quarantine.yesterdayCompare}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell rowSpan={2} align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.gone.yesterdayCompare}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                            <StyledTableRow>\r\n                                <StyledTableCell style={{ color: 'red', display: 'flex', justifyContent: 'space-around' }}\r\n                                    align=\"center\" component=\"th\" scope=\"row\">\r\n                                    {this.state.tableData.confirmed.yesterdayCompare.subTotal}\r\n                                    <Divider orientation='vertical' flexItem />\r\n                                    {this.state.tableData.confirmed.yesterdayCompare.domesticOcurrence}\r\n                                    <Divider orientation='vertical' flexItem />\r\n                                    {this.state.tableData.confirmed.yesterdayCompare.overseasInflow}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Paper style={{ backgroundColor: 'rgba(255,255,255,0.8)' }}>\r\n                    <Chart\r\n                        style={{ width: '80vw' }}\r\n                        height={300}\r\n                        data={this.state.graphData}\r\n                    >\r\n                        <ArgumentAxis />\r\n                        <ValueAxis />\r\n                        <LineSeries valueField=\"newConfirmed\" argumentField=\"createdDate\" />\r\n                    </Chart>\r\n                </Paper>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PatientsTable);\r\n","import React from \"react\";\r\n\r\nexport const LoginContext = React.createContext({\r\n  isLoggedin: false,\r\n  userName: \"\",\r\n  userImageSrc: \"\",\r\n  userID: \"\",\r\n\r\n  setLogin: () => {},\r\n  setLogout: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport GoogleLogin, { GoogleLogout } from \"react-google-login\";\r\n\r\nimport { LoginContext } from \"./LoginContext\";\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      provider: \"\",\r\n      anchorEl: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const handleClick = (event) => {\r\n      this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    const handleClose = () => {\r\n      this.setState({ anchorEl: null });\r\n    };\r\n\r\n    return (\r\n      <LoginContext.Consumer>\r\n        {({\r\n          isLoggedIn,\r\n          userName,\r\n          userImageSrc,\r\n          userID,\r\n          setLogin,\r\n          setLogout,\r\n        }) => (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginLeft: \"auto\",\r\n            }}\r\n          >\r\n            {!isLoggedIn ? (\r\n              \"\"\r\n            ) : (\r\n                <Button\r\n                  style={{\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      borderRadius: \"50%\",\r\n                      overflow: \"auto\",\r\n                    }}\r\n                    src={userImageSrc}\r\n                  />\r\n                </Button>\r\n              )}\r\n            <Button\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n              variant=\"outlined\"\r\n              color=\"default\"\r\n              style={{ borderColor: \"#ffffff\", height: \"30%\" }}\r\n            >\r\n              <Typography style={{ color: \"#ffffff\" }} variant=\"h5\">\r\n                {!isLoggedIn ? \"Login\" : \"Logout\"}\r\n              </Typography>\r\n            </Button>\r\n\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={this.state.anchorEl}\r\n              keepMounted\r\n              open={Boolean(this.state.anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {!isLoggedIn ? (\r\n                <MenuItem onClick={handleClose}>\r\n                  <GoogleLogin\r\n                    clientId={\r\n                      \"236487257759-e0kij4llhdga8ii4d1551vehfp5j4ap8.apps.googleusercontent.com\"\r\n                    }\r\n                    onSuccess={setLogin}\r\n                    onFailure={setLogout}\r\n                    cookiePolicy={\"single_host_origin\"}\r\n                    isSignedIn={true}\r\n                  ></GoogleLogin>\r\n                </MenuItem>\r\n              ) : (\r\n                  <MenuItem onClick={handleClose}>\r\n                    <GoogleLogout\r\n                      buttonText=\"로그아웃하시겠습니까?\"\r\n                      onLogoutSuccess={setLogout}\r\n                    ></GoogleLogout>\r\n                  </MenuItem>\r\n                )}\r\n            </Menu>\r\n          </div>\r\n        )}\r\n      </LoginContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport imgMask from \"../image/CoronaIcon.png\";\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\n\r\nimport Login from \"./Login\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass Appbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          id=\"Appbar\"\r\n          position=\"fixed\"\r\n          style={{ backgroundColor: \"rgba( 52, 52, 52, 0.8)\", display: \"flex\", height: '80px' }}\r\n        >\r\n          <Toolbar>\r\n            <div\r\n              style={{\r\n                width: \"100vw\",\r\n                display: \"flex\",\r\n                position: \"relative\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"30vw\",\r\n                  display: \"flex\",\r\n                  position: \"relative\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  className={classes.menuButton}\r\n                  color=\"inherit\"\r\n                  aria-label=\"menu\"\r\n                  style={{ alignSelf: \"flex-start\" }}\r\n                  href=\"/\"\r\n                >\r\n                  <img\r\n                    style={{ width: 80, height: 70, paddingRight: \"10px\" }}\r\n                    src={imgMask}\r\n                  />\r\n                  <Typography variant=\"h4\" color=\"#ffffff\">\r\n                    CoronaGoodsKR\r\n                  </Typography>\r\n                </IconButton>\r\n              </div>\r\n              {\r\n                window.location.pathname == '/' ?\r\n                  <div\r\n                    style={{\r\n                      width: \"50vw\",\r\n                      display: \"flex\",\r\n                      position: \"relative\",\r\n                      justifyContent: \"flex-end\",\r\n                      flexDirection: \"row\",\r\n                      marginLeft: \"auto\",\r\n                    }}\r\n                  >\r\n                    <Button color=\"default\">\r\n                      <ScrollLink\r\n                        activeClass=\"active\"\r\n                        to=\"section1\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        duration={500}\r\n                      >\r\n                        <Typography\r\n                          style={{ color: \"#ffffff\", padding: \"15px\" }}\r\n                          variant=\"h5\"\r\n                        >\r\n                          Total Patients\r\n                    </Typography>\r\n                      </ScrollLink>\r\n                    </Button>\r\n                    <Button color=\"default\">\r\n                      <ScrollLink\r\n                        activeClass=\"active\"\r\n                        to=\"section2\"\r\n                        spy={true}\r\n                        smooth={true}\r\n                        duration={500}\r\n                      >\r\n                        <Typography\r\n                          style={{ color: \"#ffffff\", padding: \"15px\" }}\r\n                          variant=\"h5\"\r\n                        >\r\n                          News\r\n                    </Typography>\r\n                      </ScrollLink>\r\n                    </Button>\r\n\r\n\r\n                    <Button href=\"/BBS\" color=\"default\">\r\n                      <Typography\r\n                        style={{\r\n                          color: \"#50bcdf\",\r\n                          padding: \"15px\",\r\n                          marginRight: \"15px\",\r\n                        }}\r\n                        variant=\"h5\"\r\n                      >\r\n                        Bulletin Board\r\n                  </Typography>\r\n                    </Button>\r\n                  </div>\r\n                  :\r\n                  <> </>\r\n              }\r\n              <Login />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Appbar);\r\n","import React, { Component } from \"react\";\r\nimport NewsCarousel from \"../components/NewsCarousel\";\r\nimport PatientsTable from \"../components/PatientsTable\";\r\nimport bg1 from \"../image/bg1.jpeg\";\r\nimport Appbar from \"../components/Appbar\";\r\nimport \"../css/mainPage.css\";\r\nimport LoadingScreen from \"react-loading-screen\";\r\n\r\nimport { post } from \"axios\";\r\n\r\n\r\nclass mainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      c: [1, 2, 3, 4]\r\n    };\r\n  }\r\n\r\n  handleFileOnChange = (event) => {\r\n    // 서버 api에 Post 요청\r\n    const formData = new FormData();\r\n    formData.append('profile_img', bg1);\r\n    post('/api/image', formData, {\r\n      header: { 'content-type': 'multipart/form-data' },\r\n    }).then((response) => {\r\n      console.log({ response });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let that = this;\r\n    setTimeout(function () {\r\n      that.setState({ isLoading: false });\r\n    }, 2000);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Appbar />\r\n        <div id=\"section1\" className='firstDiv'>\r\n          <PatientsTable />\r\n        </div>\r\n        <div id=\"section2\" className='secondDiv'>\r\n          <NewsCarousel />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mainPage; //withStyles 덕분에 firstDiv가 구별된다.\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Moment from \"react-moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { LoginContext } from \"./LoginContext\";\r\n\r\nimport \"../css/postTablePage.css\";\r\n\r\nconst styles = (theme) => ({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"rgba(0,0,0,1)\",\r\n    color: theme.palette.common.white,\r\n    fontSize: 20,\r\n    position: \"sticky\",\r\n  },\r\n  body: {\r\n    fontSize: 25,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n    },\r\n    \"&:nth-of-type(even)\": {\r\n      backgroundColor: \"rgba(152, 152, 152, 0.6)\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(100, 0, 0, 0.3) !important\",\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0}>\r\n        <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nclass BulletinBoardMain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      page: 0,\r\n      rowsPerPage: 5,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callApi()\r\n      .then((res) => {\r\n        this.setState({\r\n          posts: res,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  callApi = async () => {\r\n    const response = await fetch(\"/api/customers\");\r\n    const body = await response.json();\r\n    return body;\r\n  };\r\n\r\n  render() {\r\n    const emptyRows =\r\n      this.state.rowsPerPage -\r\n      Math.min(\r\n        this.state.rowsPerPage,\r\n        this.state.posts.length - this.state.page * this.state.rowsPerPage\r\n      );\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      this.setState({\r\n        page: newPage,\r\n      });\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n      this.setState({\r\n        rowsPerPage: parseInt(event.target.value, 10),\r\n        page: 0,\r\n      });\r\n    };\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Paper\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-end\",\r\n            top: this.props.AppbarHeight + 15,\r\n            height: \"auto\",\r\n            position: \"relative\",\r\n            width: \"90vw\",\r\n            left: \"5vw\",\r\n            borderRadius: \"15px\",\r\n            border: 30,\r\n            borderColor: \"#ffffff\",\r\n            backgroundColor: \"rgba(255, 255, 255, 0.6)\",\r\n            maxHeight: \"85vh\",\r\n          }}\r\n        >\r\n          <TableContainer\r\n            style={{\r\n              maxHeight: \"80vh\",\r\n            }}\r\n          >\r\n            <Table\r\n              stickyHeader\r\n              className={classes.table}\r\n              aria-label=\"customized table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align=\"center\">No.</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Image</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Title</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Writer</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">Date</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {(this.state.rowsPerPage > 0\r\n                  ? this.state.posts.slice(\r\n                    this.state.page * this.state.rowsPerPage,\r\n                    this.state.page * this.state.rowsPerPage +\r\n                    this.state.rowsPerPage\r\n                  )\r\n                  : this.state.posts\r\n                ).map((row) => (\r\n                  <StyledTableRow\r\n                    key={row.num}\r\n                    hover\r\n                    component={Link}\r\n                    to={\"/postPage/\" + row.num}\r\n                  >\r\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                      {row.num}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      <img\r\n                        style={{\r\n                          borderRadius: \"50%\",\r\n                          maxHeight: \"15vh\",\r\n                        }}\r\n                        src={row.image}\r\n                      />\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {row.title}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {row.writer}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell\r\n                      style={{ width: \"15%\", fontSize: 15 }}\r\n                      align=\"right\"\r\n                    >\r\n                      <Moment\r\n                        style={{ whiteSpace: \"pre\" }}\r\n                        format=\"YYYY-MMM-D HH:MM\"\r\n                        withTitle\r\n                      >\r\n                        {row.date}\r\n                      </Moment>\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <div style={{ display: \"flex\" }}>\r\n            <LoginContext.Consumer>\r\n              {({ isLoggedIn }) => (\r\n                <>\r\n                  {!isLoggedIn ? (\r\n                    \"\"\r\n                  ) : (\r\n                      <Button\r\n                        href=\"/createPostPage\"\r\n                        style={{\r\n                          backgroundColor: \"rgba(100,0,100,0.6)\",\r\n                          position: \"relative\",\r\n                          width: \"10vw\",\r\n                          marginRight: \"20px\",\r\n                        }}\r\n                      >\r\n                        <h3 style={{ margin: \"5px\" }}>신규 게시글 작성</h3>\r\n                      </Button>\r\n                    )}\r\n                </>\r\n              )}\r\n            </LoginContext.Consumer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={this.state.posts.length}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              component=\"div\"\r\n              labelRowsPerPage=\"페이지 당 게시물 수\"\r\n              style={{\r\n                backgroundColor: \"rgba(255, 215, 0, 0.6)\",\r\n                borderRadius: \"7px\",\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </div>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BulletinBoardMain);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport NewsCarousel from \"../components/NewsCarousel\";\r\nimport bg1 from \"../image/bg1.jpeg\";\r\nimport Appbar from \"../components/Appbar\";\r\nimport BulletinBoardMain from \"../components/BulletinBoardMain\";\r\n\r\nconst styles = (theme) => ({\r\n  firstDiv: {\r\n    backgroundImage: \"url(\" + bg1 + \")\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    width: \"auto\",\r\n    height: \"100vh\",\r\n  },\r\n});\r\n\r\nclass bulletinBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AppbarHeight: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      AppbarHeight: document.getElementById(\"Appbar\").clientHeight,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Appbar />\r\n        <div id=\"section1\" className={classes.firstDiv}>\r\n          <BulletinBoardMain AppbarHeight={this.state.AppbarHeight} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(bulletinBoard); //withStyles 덕분에 firstDiv가 구별된다.\r\n","import React, { Component, useState } from \"react\";\r\nimport { post } from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { LoginContext } from \"./LoginContext\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\nimport \"../css/quill.css\";\r\n\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst styles = (theme) => ({\r\n  contentsDiv: {\r\n    backgroundColor: \"rgba(238, 230, 196, 0.7)\",\r\n    width: \"70vw\",\r\n    borderRadius: \"10px\",\r\n    borderColor: \"#888888\",\r\n    border: 30,\r\n    marginBottom: \"10px\",\r\n  },\r\n});\r\n\r\nclass BBSPostCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\",\r\n      thumbnail: \"\",\r\n      isLoggedIn: false,\r\n      userID: \"\",\r\n      userName: \"\",\r\n      userImageSrc: \"\",\r\n      goodPost: false,\r\n    };\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.addPosts = this.addPosts.bind(this);\r\n    this.setPosts = this.setPosts.bind(this);\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    this.setPosts();\r\n    if (this.state.title != \"\" && this.state.isLoggedIn != false) {\r\n      this.state.goodPost = true;\r\n      this.addPosts();\r\n    } else {\r\n    }\r\n  };\r\n\r\n  setPosts = () => {\r\n    this.state.title = document.getElementById(\"title\").value;\r\n    this.state.content = document.getElementsByClassName(\r\n      \"ql-editor\"\r\n    )[0].innerHTML;\r\n    if (\r\n      document\r\n        .getElementsByClassName(\"ql-editor\")[0]\r\n        .getElementsByTagName(\"img\")[0] != null\r\n    ) {\r\n      this.state.thumbnail = document\r\n        .getElementsByClassName(\"ql-editor\")[0]\r\n        .getElementsByTagName(\"img\")[0].src;\r\n    } else {\r\n      this.state.thumbnail = \"\";\r\n    }\r\n  };\r\n\r\n  addPosts = () => {\r\n    const url = \"/api/posts\";\r\n    const formData = new FormData();\r\n    if (this.state.thumbnail == \"\") {\r\n      this.state.thumbnail =\r\n        \"https://2.bp.blogspot.com/-muVbmju-gkA/Vir94NirTeI/AAAAAAAAT9c/VoHzHZzQmR4/s1600/placeholder-image.jpg\";\r\n    }\r\n    formData.append(\"image\", this.state.thumbnail);\r\n    formData.append(\"title\", this.state.title);\r\n    formData.append(\"contents\", this.state.content);\r\n    formData.append(\"writer\", this.state.userName);\r\n    formData.append(\"ID\", this.state.userID);\r\n    formData.append(\"userImage\", this.state.userImageSrc);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    return post(url, formData, config);\r\n  };\r\n\r\n  imageHandler = () => {\r\n    console.log('imagehandler')\r\n  }\r\n\r\n  modules = {\r\n    toolbar: {\r\n      container: [\r\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n        ['link', 'image'],\r\n        ['clean']\r\n      ],\r\n    },\r\n    imageUploader: {\r\n      upload: file => {\r\n        return new Promise((resolve, reject) => {\r\n          const formData = new FormData();\r\n          formData.append(\"image\", file);\r\n\r\n          fetch(\r\n            \"/api/getImgURL\",\r\n            {\r\n              method: \"POST\",\r\n              body: formData\r\n            }\r\n          )\r\n            .then(response => response.json())\r\n            .then(result => {\r\n              console.log(result);\r\n              resolve(result.url);\r\n            })\r\n            .catch(error => {\r\n              reject(\"Upload failed\");\r\n              console.error(\"Error:\", error);\r\n            });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  formats = [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image'\r\n  ]\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n          position: \"relative\",\r\n          top: this.props.AppbarHeight + 30,\r\n        }}\r\n      >\r\n        <div className={classes.contentsDiv}>\r\n          <Container style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <TextField\r\n              style={{ width: \"100%\", padding: \"10px\" }}\r\n              id=\"title\"\r\n              label=\"제목을 입력하세요.\"\r\n              onChange={() => {\r\n                if (document.getElementById(\"title\").value != \"\") {\r\n                  this.setState({\r\n                    goodPost: true,\r\n                  });\r\n                } else {\r\n                  this.setState({\r\n                    goodPost: false,\r\n                  });\r\n                }\r\n              }}\r\n            ></TextField>\r\n          </Container>\r\n        </div>\r\n        <div className={classes.contentsDiv}>\r\n          <Container\r\n            style={{\r\n              height: \"60vh\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              //alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ReactQuill id=\"content\" modules={this.modules} format={this.formats}></ReactQuill>\r\n          </Container>\r\n        </div>\r\n        <div className={classes.contentsDiv}>\r\n          <Container\r\n            style={{\r\n              display: \"flex\",\r\n              height: \"10vh\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Button\r\n              href=\"/BBS\"\r\n              style={{ height: \"70%\", marginRight: \"15px\" }}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            >\r\n              이전 페이지로 이동\r\n            </Button>\r\n            <Button\r\n              style={{ height: \"70%\" }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={this.handleFormSubmit}\r\n              href={this.state.goodPost ? \"/BBS\" : \"\"}\r\n            >\r\n              게시글 올리기\r\n            </Button>\r\n          </Container>\r\n          <LoginContext.Consumer>\r\n            {({ isLoggedIn, userName, userImageSrc, userID }) => (\r\n              <div style={{ display: \"none\" }}>\r\n                {\r\n                  ((this.state.isLoggedIn = isLoggedIn),\r\n                    (this.state.userName = userName),\r\n                    (this.state.userID = userID),\r\n                    (this.state.userImageSrc = userImageSrc))\r\n                }\r\n              </div>\r\n            )}\r\n          </LoginContext.Consumer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BBSPostCreate); //withStyles 덕분에 firstDiv가 구별된다.\r\n","import React, { Component, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Appbar from \"../components/Appbar\";\r\nimport BBSPostCreate from \"../components/BBSPostCreate\";\r\nimport bg1 from \"../image/bg1.jpeg\";\r\nimport BulletinBoardMain from \"../components/BulletinBoardMain\";\r\n\r\nconst styles = (theme) => ({\r\n  firstDiv: {\r\n    backgroundImage: \"url(\" + bg1 + \")\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    width: \"auto\",\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n  },\r\n});\r\n\r\nclass createPostPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AppbarHeight: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      AppbarHeight: document.getElementById(\"Appbar\").clientHeight,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Appbar />\r\n        <div className={classes.firstDiv}>\r\n          <BBSPostCreate\r\n            AppbarHeight={this.state.AppbarHeight}\r\n            history={this.props.history}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(createPostPage); //withStyles 덕분에 firstDiv가 구별된다.\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { LoginContext } from \"./LoginContext\";\r\n\r\n\r\nimport \"../css/carousel.css\";\r\n\r\nconst styles = (theme) => ({\r\n    multilineColor: {\r\n        color: 'white'\r\n    },\r\n});\r\n\r\nclass NestedComment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    delComment = (commentNum) => {\r\n        const url = \"/api/deleteComment/\" + commentNum;\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n        }).then((res) => {\r\n            this.props.minusCommentChild(this.props.parentNum);\r\n            this.props.refreshParent();\r\n            this.props.refreshNestedComment();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props;\r\n\r\n        return (\r\n            <LoginContext.Consumer>\r\n                {({ isLoggedIn, userName, userImageSrc, userID }) => (\r\n                    <div style={{\r\n                        display: \"flex\", alignItems: \"center\", marginBottom: \"15px\", backgroundColor: \"rgba(200, 150, 150, 0.8)\",\r\n                        borderRadius: \"15px\", padding: \"5px\", justifyContent: \"space-between\",\r\n                        height: \"160px\", maxWidth: \"90%\"\r\n                    }}>\r\n                        <div style={{ flex: 7, display: \"flex\", alignItems: \"center\" }}>\r\n                            <img style={{ borderRadius: \"50%\", height: \"50px\", marginLeft: \"10px\", marginRight: \"10px\" }} src={this.props.data.userImage}></img>\r\n                            <div style={{\r\n                                display: 'flex', flexDirection: 'column', justifyContent: 'space-around', height: \"100%\"\r\n                            }}>\r\n                                <TextField\r\n                                    disabled\r\n                                    style={{\r\n                                        width: \"40vw\"\r\n                                    }}\r\n                                    id=\"outlined-multiline-static\"\r\n                                    label={\"Written by \" + this.props.data.writer + \" on \" + this.props.data.date}\r\n                                    multiline\r\n                                    rows={4}\r\n                                    value={this.props.data.content}\r\n                                    variant=\"outlined\"\r\n                                    InputProps={{\r\n                                        classes: {\r\n                                            input: classes.multilineColor\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ marginLeft: \"10px\", marginRight: \"10px\", height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n\r\n                            {(!isLoggedIn || (userID != this.props.data.ID)) ? (\r\n                                \"\"\r\n                            ) : (\r\n                                    <Button variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        onClick={(e) => { e.preventDefault(); this.delComment(this.props.data.num) }}\r\n                                        startIcon={<DeleteIcon />} style={{ height: \"60px\" }}>\r\n                                        삭제하기\r\n                                    </Button>\r\n                                )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n\r\n                }\r\n            </LoginContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(NestedComment);\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { post } from \"axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"../css/carousel.css\";\r\n\r\nclass NestedComments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button key={this.props.isopen} style={{ alignSelf: \"flex-end\", justifySelf: 'flex-end' }}\r\n                    onClick={this.props.handleClick} >\r\n                    {'➥ ' + this.props.childCount + ' 개의 댓글 '} {this.props.isopen == false ? '열기' : '닫기'}\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NestedComments;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { post } from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport NestedComment from \"./NestedComment.js\";\r\nimport NestedCommentsButton from \"./NestedCommentsButton.js\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport { LoginContext } from \"./LoginContext\";\r\n\r\n\r\nimport \"../css/carousel.css\";\r\n\r\nconst styles = (theme) => ({\r\n    multilineColor: {\r\n        color: 'white'\r\n    },\r\n});\r\n\r\nclass Comment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nestedComments: [],\r\n            isopen: false,\r\n            textValue: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNestedComments().then((res) => {\r\n            this.setState({\r\n                nestedComments: res\r\n            });\r\n\r\n        }).catch((err) => console.log(err))\r\n    }\r\n\r\n    delComment = (commentNum) => {\r\n        const url = \"/api/deleteComment/\" + commentNum;\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n        }).then((res) => {\r\n            this.props.minusCommentChild(this.props.parentNum);\r\n            this.props.refreshComment();\r\n            this.props.refreshParent();\r\n        });\r\n    }\r\n\r\n    setTextValue = (event) => {\r\n        this.setState({ textValue: event.target.value });\r\n    }\r\n\r\n    getComments = async () => {\r\n        const response = await fetch(\"/api/getComment/\" + this.props.postNum);\r\n        const body = await response.json();\r\n\r\n        const new_body = body.map((row) => {\r\n            return { ...row, isopen: false }\r\n        })\r\n        return new_body;\r\n    }\r\n\r\n    minusCommentChild = async (parentNum) => {\r\n\r\n        const response = await fetch(\"/api/minusCommentChild/\" + parentNum);\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    addComment = (parentNum) => {\r\n        let context = this.context;\r\n        const url = \"/api/addComment/\";\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"writer\", context.userName)\r\n        formData.append(\"ID\", context.userID)\r\n        formData.append(\"userImage\", context.userImageSrc)\r\n        formData.append(\"postNum\", this.props.post.num)\r\n        formData.append(\"content\", this.state.textValue);\r\n\r\n        if (parentNum != undefined) {\r\n            formData.append(\"parentNum\", parentNum);\r\n        }\r\n\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n            },\r\n        };\r\n        post(url, formData, config).then(() => {\r\n            this.props.refreshComment();\r\n            this.refreshNestedComment();\r\n            document.getElementById(\"commentContent\").value = '';\r\n        });\r\n    };\r\n\r\n    refreshNestedComment = () => {\r\n        this.state.nestedComments = []\r\n        this.getNestedComments()\r\n            .then((res) => {\r\n                this.setState({\r\n                    nestedComments: res,\r\n                });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n\r\n    handleOpen = (commentNum) => {\r\n        this.setState({\r\n            commentDlgOpen: true,\r\n            targetComment: commentNum,\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            commentDlgOpen: false,\r\n        });\r\n    }\r\n\r\n    delComment = (commentNum) => {\r\n        const url = \"/api/deleteComment/\" + commentNum;\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n        }).then(() => {\r\n            this.props.refreshComment()\r\n        });\r\n    }\r\n\r\n    getNestedComments = async () => {\r\n        const response = await fetch(\"/api/getNestedComments/\" + this.props.data.num);\r\n        const body = await response.json();\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props;\r\n\r\n        return (\r\n            <LoginContext.Consumer>\r\n                {({ isLoggedIn, userName, userImageSrc, userID }) => (\r\n                    <>\r\n                        <div>\r\n                            <div style={{\r\n                                display: \"flex\", alignItems: \"center\", marginBottom: \"15px\", backgroundColor: \"rgba(150, 150, 150, 0.8)\",\r\n                                borderRadius: \"15px\", padding: \"5px\", justifyContent: \"space-between\", height: \"160px\",\r\n                            }}>\r\n                                <div style={{ flex: 7, display: \"flex\", alignItems: \"center\" }}>\r\n                                    <img style={{ borderRadius: \"50%\", height: \"50px\", marginLeft: \"10px\", marginRight: \"10px\" }} src={this.props.data.userImage}></img>\r\n                                    <div style={{\r\n                                        display: 'flex', flexDirection: 'column', justifyContent: 'space-around', height: \"100%\"\r\n                                    }}>\r\n                                        <TextField\r\n                                            disabled\r\n                                            style={{\r\n                                                width: \"47vw\"\r\n                                            }}\r\n                                            id=\"outlined-multiline-static\"\r\n                                            label={\"Written by \" + this.props.data.writer + \" on \" + this.props.data.date}\r\n                                            multiline\r\n                                            rows={4}\r\n                                            value={this.props.data.content}\r\n                                            variant=\"outlined\"\r\n                                            InputProps={{\r\n                                                classes: {\r\n                                                    input: classes.multilineColor\r\n                                                },\r\n                                            }}\r\n                                        />\r\n                                        {this.props.data.childCount == 0 ? <> </> :\r\n                                            <>\r\n                                                <NestedCommentsButton\r\n                                                    childCount={this.props.data.childCount}\r\n                                                    parentComment={this.props.data.num}\r\n                                                    isopen={this.state.isopen}\r\n                                                    handleClick={() => {\r\n                                                        this.setState({\r\n                                                            isopen: !this.state.isopen\r\n                                                        })\r\n                                                    }} />\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ marginLeft: \"10px\", marginRight: \"10px\", height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n\r\n                                    {!isLoggedIn ? (\r\n                                        \"\"\r\n                                    ) : (<>\r\n\r\n                                        <Button variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={() => { this.handleOpen(this.props.data.num) }}\r\n                                            startIcon={<CloudUploadIcon />} style={{ height: \"60px\" }}>\r\n                                            댓글 달기\r\n                                </Button>\r\n\r\n                                        <Dialog id='commentDlg' onClose={() => { this.handleClose(); }}\r\n                                            open={this.state.commentDlgOpen} fullWidth={true} maxWidth='md'>\r\n                                            <DialogTitle onClose={() => { this.handleClose() }}>댓글 달기</DialogTitle>\r\n                                            <DialogContent>\r\n                                                <TextField\r\n                                                    onChange={this.setTextValue}\r\n                                                    style={{\r\n                                                        width: \"100%\"\r\n                                                    }}\r\n                                                    id=\"nestedCommentContent\"\r\n                                                    label=\"Multiline\"\r\n                                                    multiline\r\n                                                    rows={3}\r\n                                                    variant=\"filled\"\r\n                                                    label=\"여기에 댓글을 입력하세요.\"\r\n                                                />\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={(e) => {\r\n                                                        e.preventDefault(); this.addComment(this.props.data.num); this.handleClose();\r\n                                                    }}\r\n                                                >\r\n                                                    댓글 추가\r\n                              </Button>\r\n                                                <Button\r\n                                                    variant=\"outlined\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => { this.handleClose() }}\r\n                                                >\r\n                                                    닫기\r\n                              </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n\r\n                                        {userID != this.props.data.ID ? <> </> :\r\n                                            <>\r\n                                                <Button variant=\"contained\"\r\n                                                    color=\"secondary\"\r\n                                                    onClick={(e) => { e.preventDefault(); this.delComment(this.props.data.num) }}\r\n                                                    startIcon={<DeleteIcon />} style={{ height: \"60px\" }}>\r\n                                                    삭제하기\r\n                                        </Button>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                        )}\r\n                                </div>\r\n                            </div>\r\n                            {this.state.isopen == false ? <> </> :\r\n                                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n                                    {\r\n                                        this.state.nestedComments.map(row => (\r\n                                            <NestedComment parentNum={this.props.data.num} minusCommentChild={this.minusCommentChild}\r\n                                                refreshParent={this.props.refreshComment} data={row} refreshNestedComment={this.refreshNestedComment} />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            }\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </LoginContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nComment.contextType = LoginContext;\r\nexport default withStyles(styles)(Comment);\r\n","import React, { Component, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { post } from \"axios\";\r\nimport Comment from \"./Comment.js\"\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport bg1 from \"../image/bg1.jpeg\";\r\nimport titleBg from \"../image/title.png\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { LoginContext } from \"./LoginContext\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Moment from \"react-moment\";\r\n\r\n\r\nimport \"../css/BBSPost.css\";\r\n\r\nconst styles = (theme) => ({\r\n  multilineColor: {\r\n    color: 'black'\r\n  },\r\n});\r\n\r\n\r\nclass postPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AppbarHeight: 0,\r\n      post: \"\",\r\n      comment: [],\r\n      nestedComment: [],\r\n\r\n      temp: 12312412412124,\r\n\r\n      textValue: \"\",\r\n      commentDlgOpen: false,\r\n      targetComment: -1,\r\n    };\r\n\r\n    this.addComment = this.addComment.bind(this);\r\n    this.getPosts = this.getPosts.bind(this);\r\n    this.getComments = this.getComments.bind(this);\r\n    this.delPost = this.delPost.bind(this);\r\n    this.refreshComment = this.refreshComment.bind(this);\r\n    this.delComment = this.delComment.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      AppbarHeight: document.getElementById(\"Appbar\").clientHeight,\r\n    });\r\n    this.getPosts()\r\n      .then((res) => {\r\n        this.setState({\r\n          post: res[0],\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    this.getComments()\r\n      .then((res) => {\r\n        this.setState({\r\n          comment: res,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  getPosts = async () => {\r\n    const response = await fetch(\"/api/getPost/\" + this.props.postNum);\r\n    const body = await response.json();\r\n    return body;\r\n  };\r\n\r\n  getComments = async () => {\r\n    const response = await fetch(\"/api/getComment/\" + this.props.postNum);\r\n    const body = await response.json();\r\n\r\n    const new_body = body.map((row) => {\r\n      return { ...row, isopen: false }\r\n    })\r\n    return new_body;\r\n  }\r\n\r\n  delPost = () => {\r\n    const url = \"/api/deletePost/\" + this.props.postNum;\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n    });\r\n  };\r\n\r\n  delComment = (commentNum) => {\r\n    const url = \"/api/deleteComment/\" + commentNum;\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      this.refreshComment()\r\n    });\r\n  }\r\n\r\n  handleOpen = (commentNum) => {\r\n    this.setState({\r\n      commentDlgOpen: true,\r\n      targetComment: commentNum,\r\n    });\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      commentDlgOpen: false,\r\n    });\r\n  }\r\n\r\n  addComment = (parentNum) => {\r\n    let context = this.context;\r\n    const url = \"/api/addComment/\";\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"writer\", context.userName)\r\n    formData.append(\"ID\", context.userID)\r\n    formData.append(\"userImage\", context.userImageSrc)\r\n    formData.append(\"postNum\", this.state.post.num)\r\n    formData.append(\"content\", this.state.textValue);\r\n\r\n    if (parentNum != undefined) {\r\n      formData.append(\"parentNum\", parentNum);\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    post(url, formData, config).then(() => {\r\n      this.refreshComment()\r\n      document.getElementById(\"commentContent\").value = ''\r\n    });\r\n  };\r\n\r\n  minusCommentChild = async (parentNum) => {\r\n    const response = await fetch(\"/api/minusCommentChild/\" + parentNum);\r\n    const body = await response.json();\r\n    return body;\r\n  }\r\n\r\n  setTextValue = (event) => {\r\n    this.setState({ textValue: event.target.value });\r\n  }\r\n\r\n  refreshComment = () => {\r\n    this.state.comment = []\r\n    this.getComments()\r\n      .then((res) => {\r\n        this.setState({\r\n          comment: res,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className='frameDiv'\r\n        style={{\r\n          top: this.state.AppbarHeight + 30,\r\n        }}\r\n      >\r\n        <LoginContext.Consumer>\r\n          {({ isLoggedIn, userName, userImageSrc, userID }) => (\r\n            <>\r\n              <div className=\"contentsDiv\">\r\n                <Container\r\n                  className='postContainer'\r\n                >\r\n                  <Paper\r\n                    className=\"titlePaper\"\r\n                    style={{\r\n                      backgroundColor: 'transparent'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      gutterBottom\r\n                      style={{ color: \"#c0c0c0\" }}\r\n                    >\r\n                      {this.state.post.title}\r\n                    </Typography>\r\n                  </Paper>\r\n                </Container>\r\n              </div>\r\n              <div className=\"contentsDiv\">\r\n                <div\r\n                  className='postDiv'\r\n                  dangerouslySetInnerHTML={{ __html: this.state.post.contents }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"contentsDiv\">\r\n                <Container\r\n                  style={{\r\n                    display: \"flex\",\r\n                    height: \"10vh\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    className='infoDiv'\r\n                  >\r\n                    <img\r\n                      style={{\r\n                        height: \"55%\",\r\n                        borderRadius: \"50%\",\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                      src={this.state.post.userImage}\r\n                    />\r\n                    <Typography variant=\"h5\">{this.state.post.writer}</Typography>\r\n                    <Typography variant=\"h6\">\r\n                      &nbsp; 님이 작성한 게시글입니다.\r\n                    </Typography>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flex: 1,\r\n                      height: \"100%\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      href=\"/BBS\"\r\n                      style={{ height: \"70%\", marginRight: \"15px\" }}\r\n                      variant=\"outlined\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      이전 페이지로 이동\r\n                    </Button>\r\n                    {this.state.post.ID == userID ? (\r\n                      <Button\r\n                        style={{ height: \"70%\" }}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={this.delPost}\r\n                        href=\"/BBS\"\r\n                      >\r\n                        게시글 삭제하기\r\n                      </Button>\r\n                    ) : (\r\n                        <></>\r\n                      )}\r\n                  </div>\r\n                </Container>\r\n              </div>\r\n\r\n              {!isLoggedIn ? (\r\n                \"\"\r\n              ) : (\r\n                  <div className=\"contentsDiv\">\r\n                    <div className='commentInputDiv'>\r\n                      <img\r\n                        style={{\r\n                          width: \"6%\",\r\n                          borderRadius: \"50%\",\r\n                          marginRight: \"15px\"\r\n                        }}\r\n                        src={userImageSrc}\r\n                      />\r\n                      <TextField\r\n                        onChange={this.setTextValue}\r\n                        style={{\r\n                          width: \"55vw\"\r\n                        }}\r\n                        id=\"commentContent\"\r\n                        label=\"Multiline\"\r\n                        multiline\r\n                        rows={3}\r\n                        variant=\"filled\"\r\n                        label=\"여기에 댓글을 입력하세요.\"\r\n                      />\r\n                      <div\r\n                        className='commentInputButtonDiv'\r\n                      >\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"default\"\r\n                          style={{\r\n                            padding: '15px',\r\n                            height: '70%'\r\n                          }}\r\n                          onClick={(e) => { e.preventDefault(); this.addComment() }}\r\n                        >\r\n                          댓글 쓰기\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div >\r\n                )}\r\n\r\n              <div className=\"contentsDiv\">\r\n                <Container\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"15px\",\r\n                    marginBottom: \"15px\",\r\n                    justifyContent: \"center\",\r\n                  }}>\r\n                  <div\r\n                    style={{\r\n                      marginLeft: \"15px\",\r\n                      marginRight: \"15px\",\r\n                      position: \"relative\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      maxWidth: \"85vw\",\r\n                      width: \"100%\",\r\n                      backgroundColor: \"rgba(200, 200, 200, 0.8)\",\r\n                      borderRadius: \"15px\",\r\n                      padding: \"30px\",\r\n                      marginTop: \"15px\",\r\n                      marginBottom: \"15px\",\r\n                    }}\r\n                  >\r\n                    {this.state.comment.map((row) => (\r\n                      <Comment data={row} post={this.state.post} refreshComment={this.refreshComment} />\r\n                    ))}\r\n                  </div>\r\n                </Container>\r\n              </div>\r\n            </>\r\n          )}\r\n        </LoginContext.Consumer>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\npostPage.contextType = LoginContext;\r\nexport default withStyles(styles)(postPage); //withStyles 덕분에 firstDiv가 구별된다.\r\n","import React, { Component, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport BBSPost from \"../components/BBSPost\";\r\nimport Appbar from \"../components/Appbar\";\r\n\r\nimport \"../css/BBSPost.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nconst styles = (theme) => ({});\r\n\r\nclass postPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      AppbarHeight: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      AppbarHeight: document.getElementById(\"Appbar\").clientHeight,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { params } = this.props.match;\r\n    return (\r\n      <>\r\n        <Appbar />\r\n        <BBSPost postNum={params.postNum} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(postPage); //withStyles 덕분에 firstDiv가 구별된다.\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Router, Switch, Route, withRouter } from \"react-router-dom\";\r\nimport MainPage from \"./pages/mainPage\";\r\nimport bulletinBoard from \"./pages/bulletinBoard\";\r\nimport createPostPage from \"./pages/createPostPage\";\r\nimport postPage from \"./pages/postPage\";\r\n\r\nimport { LoginContext } from \"./components/LoginContext\";\r\n\r\nconst styles = (theme) => ({});\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setLogin = (res) => {\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        userName: res.profileObj.name,\r\n        userImageSrc: res.profileObj.imageUrl,\r\n        userID: res.googleId,\r\n      });\r\n      console.log(this.state.userName)\r\n    };\r\n    this.setLogout = (res) => {\r\n      this.setState({\r\n        isLoggedIn: false,\r\n        userName: \"\",\r\n        userImageSrc: \"\",\r\n        userID: \"\",\r\n      });\r\n    };\r\n    this.state = {\r\n      isLoggedIn: false,\r\n      userName: \"\",\r\n      userImageSrc: \"\",\r\n      userID: \"\",\r\n      setLogin: this.setLogin,\r\n      setLogout: this.setLogout,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        {/*원래 위에 Router 들어가 있었음*/}\r\n        <LoginContext.Provider value={this.state}>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={MainPage} />\r\n            <Route path=\"/BBS\" exact component={bulletinBoard} />\r\n            <Route path=\"/createPostPage\" exact component={createPostPage} />\r\n            <Route path=\"/postPage/:postNum\" exact component={postPage} />\r\n          </Switch>\r\n        </LoginContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(App)); //withStyles 덕분에 firstDiv가 구별된다.\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // console.log(\r\n          //   'This web app is being served cache-first by a service ' +\r\n          //     'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          // );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              // console.log(\r\n              //   'New content is available and will be used when all ' +\r\n              //     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              // );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n           //   console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n  //    console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n //     console.log(\r\n //       'No internet connection found. App is running in offline mode.'\r\n //     );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n    //    console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Oswald-bold\",\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/bg1.ade38d2d.jpeg\";"],"sourceRoot":""}